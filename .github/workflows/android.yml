name: Android Release APK (Signed)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Build web (Vite)
        run: npm run build

      - name: Add Android platform (Capacitor)
        run: npx cap add android
        continue-on-error: true

      - name: Generate Android icons & splash
        run: npx @capacitor/assets generate --android

      - name: Sync web to Android
        run: npx cap sync android

      # Sube versionCode/versionName (sirve para build.gradle y build.gradle.kts)
      - name: Bump versionCode & versionName
        shell: bash
        run: |
          set -e
          VC=$((10000 + ${GITHUB_RUN_NUMBER}))
          VN=$(date +'%Y.%m.%d.%H%M')
          echo "Using versionCode=${VC}, versionName=${VN}"

          if [ -f android/app/build.gradle ]; then
            sed -i.bak -E "s/versionCode[[:space:]]+[0-9]+/versionCode ${VC}/" android/app/build.gradle
            sed -i.bak -E "s/versionName[[:space:]]+\"[^\"]*\"/versionName \"${VN}\"/" android/app/build.gradle
            grep -nE 'version(Code|Name)' android/app/build.gradle || true
          fi

          if [ -f android/app/build.gradle.kts ]; then
            sed -i.bak -E "s/versionCode[[:space:]]*=[[:space:]]*[0-9]+/versionCode = ${VC}/" android/app/build.gradle.kts
            sed -i.bak -E "s/versionName[[:space:]]*=[[:space:]]*\"[^\"]*\"/versionName = \"${VN}\"/" android/app/build.gradle.kts
            grep -nE 'version(Code|Name)' android/app/build.gradle.kts || true
          fi

      - name: Make Gradle executable
        run: chmod +x android/gradlew

      - name: Build Release (unsigned)
        working-directory: android
        run: ./gradlew assembleRelease

      # ðŸ‘‰ Localiza el SDK y garantiza build-tools (apksigner)
      - name: Locate Android SDK & Build-Tools
        shell: bash
        run: |
          set -e
          SDK="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          SDK="${SDK:-/usr/local/lib/android/sdk}"
          echo "SDK detected: $SDK"
          echo "SDK=$SDK" >> $GITHUB_ENV

          if [ ! -d "$SDK/build-tools" ] || [ -z "$(ls -A "$SDK/build-tools" 2>/dev/null)" ]; then
            echo "Build-tools not found. Installing 34.0.0â€¦"
            "$SDK/cmdline-tools/latest/bin/sdkmanager" --licenses <<< 'y' >/dev/null 2>&1 || true
            "$SDK/cmdline-tools/latest/bin/sdkmanager" "build-tools;34.0.0"
          fi

          ls -1 "$SDK/build-tools"
          echo "BUILD_TOOLS=$(ls "$SDK/build-tools" | sort -V | tail -n 1)" >> $GITHUB_ENV

      - name: Prepare keystore from secrets
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > hasaba.jks
          ls -lh hasaba.jks

      - name: Sign APK
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          set -e
          echo "Using build-tools: $BUILD_TOOLS"
          UNSIGNED=android/app/build/outputs/apk/release/app-release-unsigned.apk
          OUT=app-release-signed.apk
          "$SDK/build-tools/$BUILD_TOOLS/apksigner" sign \
            --ks hasaba.jks \
            --ks-key-alias "$ANDROID_KEY_ALIAS" \
            --ks-pass pass:"$ANDROID_KEYSTORE_PASSWORD" \
            --key-pass pass:"$ANDROID_KEY_PASSWORD" \
            --out "$OUT" "$UNSIGNED"
          "$SDK/build-tools/$BUILD_TOOLS/apksigner" verify "$OUT"
          ls -lh "$OUT"

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: hasaba-release-signed.apk
          path: app-release-signed.apk
